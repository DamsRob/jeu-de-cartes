{"ast":null,"code":"import * as i0 from \"@angular/core\";\nexport class CardService {\n  constructor() {}\n  addCard(valueCard, colorCard, imgCard) {\n    this.hand.push({\n      value: valueCard,\n      color: colorCard,\n      img: imgCard\n    });\n    console.log(this.hand);\n  }\n  static #_ = this.ɵfac = function CardService_Factory(t) {\n    return new (t || CardService)();\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: CardService,\n    factory: CardService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["CardService","constructor","addCard","valueCard","colorCard","imgCard","hand","push","value","color","img","console","log","_","_2","factory","ɵfac","providedIn"],"sources":["C:\\Users\\drobert\\Documents\\Intertcontrat\\Formations\\Test technique Atexo\\jeu-de-cartes\\src\\app\\core\\services\\card.service.ts"],"sourcesContent":["import { Card } from \"../models/card.model\";\r\nimport { Injectable } from \"@angular/core\";\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\n\r\nexport class CardService{\r\n    \r\n    hand!: Card[]\r\n\r\n    constructor(){}\r\n\r\n    addCard(valueCard: number, colorCard: string, imgCard: string){\r\n        this.hand.push({\r\n            value: valueCard,\r\n            color: colorCard,\r\n            img: imgCard\r\n        })\r\n        console.log(this.hand)\r\n    }\r\n\r\n}\r\n\r\n"],"mappings":";AAOA,OAAM,MAAOA,WAAW;EAIpBC,YAAA,GAAc;EAEdC,OAAOA,CAACC,SAAiB,EAAEC,SAAiB,EAAEC,OAAe;IACzD,IAAI,CAACC,IAAI,CAACC,IAAI,CAAC;MACXC,KAAK,EAAEL,SAAS;MAChBM,KAAK,EAAEL,SAAS;MAChBM,GAAG,EAAEL;KACR,CAAC;IACFM,OAAO,CAACC,GAAG,CAAC,IAAI,CAACN,IAAI,CAAC;EAC1B;EAAC,QAAAO,CAAA,G;qBAbQb,WAAW;EAAA;EAAA,QAAAc,EAAA,G;WAAXd,WAAW;IAAAe,OAAA,EAAXf,WAAW,CAAAgB,IAAA;IAAAC,UAAA,EAHR;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}